{
  "swagger": "2.0",
  "info": {
    "version": "2022-03-01",
    "title": "Azure Orbital",
    "description": "Azure Orbital service.",
    "license": {
      "name": "Microsoft"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Orbital/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Orbital Rest API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/spacecrafts": {
      "get": {
        "tags": [
          "Spacecraft"
        ],
        "description": "Return list of spacecrafts by subscription.",
        "operationId": "Spacecrafts_ListBySubscription",
        "x-ms-examples": {
          "List of Spacecraft by Subscription": {
            "$ref": "./examples/SpacecraftsBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of spacecraft resources.",
            "schema": {
              "$ref": "#/definitions/SpacecraftListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts": {
      "get": {
        "tags": [
          "Spacecraft"
        ],
        "description": "Return list of spacecrafts by resource group.",
        "operationId": "Spacecrafts_List",
        "x-ms-examples": {
          "List of Spacecraft by Resource Group": {
            "$ref": "./examples/SpacecraftsByResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of spacecraft resources.",
            "schema": {
              "$ref": "#/definitions/SpacecraftListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}": {
      "get": {
        "tags": [
          "Spacecraft"
        ],
        "operationId": "Spacecrafts_Get",
        "description": "Gets the specified spacecraft in a specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Spacecraft resource.",
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Spacecraft": {
            "$ref": "./examples/SpacecraftGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Spacecraft"
        ],
        "description": "Creates or updates a spacecraft resource.",
        "operationId": "Spacecrafts_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            },
            "description": "The parameters to provide for the created spacecraft."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting spacecraft resource.",
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting spacecraft resource.",
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL for checking the ongoing status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a spacecraft": {
            "$ref": "./examples/SpacecraftCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Spacecraft"
        ],
        "operationId": "Spacecrafts_Delete",
        "description": "Deletes a specified spacecraft resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Spacecraft": {
            "$ref": "./examples/SpacecraftDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Spacecraft"
        ],
        "operationId": "Spacecrafts_UpdateTags",
        "x-ms-examples": {
          "Update Spacecraft tags": {
            "$ref": "./examples/SpacecraftUpdateTags.json"
          }
        },
        "description": "Updates the specified spacecraft tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update spacecraft tags."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Spacecraft resource.",
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "description": "Returns list of contacts by spacecraftName.",
        "operationId": "Contacts_List",
        "x-ms-examples": {
          "List of Spacecraft": {
            "$ref": "./examples/ContactsBySpacecraftNameList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of contacts by spacecraftName.",
            "schema": {
              "$ref": "#/definitions/ContactListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/contacts/{contactName}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contacts_Get",
        "description": "Gets the specified contact in a specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "$ref": "#/parameters/contactNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Contact resource.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Contact": {
            "$ref": "./examples/ContactGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "description": "Creates a contact.",
        "operationId": "Contacts_Create",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "$ref": "#/parameters/contactNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            },
            "description": "The parameters to provide for the created contact."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting contact resource.",
            "schema": {
              "$ref": "#/definitions/Contact"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL for checking the ongoing status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a contact": {
            "$ref": "./examples/ContactCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contacts_Delete",
        "description": "Deletes a specified contact.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "$ref": "#/parameters/contactNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Contact": {
            "$ref": "./examples/ContactDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/listAvailableContacts": {
      "post": {
        "tags": [
          "Contact"
        ],
        "description": "Return list of available contacts. A contact is available if the spacecraft is visible from the ground station for more than the minimum viable contact duration provided in the contact profile..",
        "operationId": "Spacecrafts_ListAvailableContacts",
        "x-ms-examples": {
          "List of Contact": {
            "$ref": "./examples/AvailableContactsList.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/ContactParameters"
            },
            "description": "The parameters to provide for the contacts."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of available contacts resources.",
            "schema": {
              "$ref": "#/definitions/AvailableContactsListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/{contactProfileName}": {
      "get": {
        "tags": [
          "Contact Profile"
        ],
        "operationId": "ContactProfiles_Get",
        "description": "Gets the specified contact Profile in a specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/contactProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ContactProfile resource.",
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a contact profile": {
            "$ref": "./examples/ContactProfileGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Contact Profile"
        ],
        "description": "Creates or updates a contact profile.",
        "operationId": "ContactProfiles_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/contactProfileNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            },
            "description": "The parameters to provide for the created Contact Profile."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ContactProfile resource.",
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ContactProfile resource.",
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL for checking the ongoing status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a contact profile": {
            "$ref": "./examples/ContactProfileCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Contact Profile"
        ],
        "operationId": "ContactProfiles_Delete",
        "description": "Deletes a specified contact profile resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/contactProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Contact Profile": {
            "$ref": "./examples/ContactProfileDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Contact Profile"
        ],
        "operationId": "ContactProfiles_UpdateTags",
        "x-ms-examples": {
          "Update Contact Profile tags": {
            "$ref": "./examples/ContactProfileUpdateTag.json"
          }
        },
        "description": "Updates the specified contact profile tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update contact profile tags."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/contactProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Contact Profile resource.",
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/contactProfiles": {
      "get": {
        "tags": [
          "Contact Profile"
        ],
        "description": "Returns list of contact profiles by Subscription.",
        "operationId": "ContactProfiles_ListBySubscription",
        "x-ms-examples": {
          "List of Contact Profiles": {
            "$ref": "./examples/ContactProfilesBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of contact profile resources.",
            "schema": {
              "$ref": "#/definitions/ContactProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles": {
      "get": {
        "tags": [
          "Contact Profile"
        ],
        "description": "Returns list of contact profiles by Resource Group.",
        "operationId": "ContactProfiles_List",
        "x-ms-examples": {
          "List of Contact Profiles": {
            "$ref": "./examples/ContactProfilesByResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of contact profile resources.",
            "schema": {
              "$ref": "#/definitions/ContactProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/availableGroundStations": {
      "get": {
        "tags": [
          "Ground Station"
        ],
        "description": "Returns list of available ground stations.",
        "operationId": "AvailableGroundStations_ListByCapability",
        "x-ms-examples": {
          "List of Ground Stations by Capability": {
            "$ref": "./examples/AvailableGroundStationsByCapabilityList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/capabilityParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Ground Station resources.",
            "schema": {
              "$ref": "#/definitions/AvailableGroundStationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/availableGroundStations/{groundStationName}": {
      "get": {
        "tags": [
          "Ground Station"
        ],
        "operationId": "AvailableGroundStations_Get",
        "description": "Gets the specified  available ground station.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/groundStationNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ground station resource.",
            "schema": {
              "$ref": "#/definitions/AvailableGroundStation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get GroundStation": {
            "$ref": "./examples/AvailableGroundStationGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/locations/{location}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "OperationResults"
        ],
        "description": "Returns operation results.",
        "operationId": "OperationsResults_Get",
        "x-ms-examples": {
          "KustoOperationResultsGet": {
            "$ref": "./examples/OperationResultsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the operation result.",
            "schema": {
              "$ref": "#/definitions/OperationResult"
            }
          },
          "202": {
            "description": "The operation is still in progress.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "SpacecraftsProperties": {
      "type": "object",
      "required": [
        "noradId"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "noradId": {
          "type": "string",
          "description": "NORAD ID of the spacecraft."
        },
        "titleLine": {
          "type": "string",
          "description": "Title line of The two-line element set (TLE)."
        },
        "tleLine1": {
          "type": "string",
          "description": "Line 1 of The two-line element set (TLE)."
        },
        "tleLine2": {
          "type": "string",
          "description": "Line 2 of The two-line element set (TLE)."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpacecraftLink"
          },
          "x-ms-identifiers": [],
          "description": "Immutable list of Spacecraft links.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "List of Spacecraft Resource Properties."
    },
    "SpacecraftListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spacecraft"
          },
          "description": "A list of spacecraft resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListSpacecrafts API service call."
    },
    "SpacecraftLink": {
      "type": "object",
      "required": [
        "name",
        "centerFrequencyMHz",
        "bandwidthMHz",
        "direction",
        "polarization"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Link name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "centerFrequencyMHz": {
          "type": "number",
          "description": "Center Frequency in MHz.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "bandwidthMHz": {
          "type": "number",
          "description": "Bandwidth in MHz.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "direction": {
          "type": "string",
          "description": "Direction (uplink or downlink).",
          "enum": [
            "uplink",
            "downlink"
          ],
          "x-ms-enum": {
            "name": "direction",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "polarization": {
          "type": "string",
          "description": "Polarization. e.g. (RHCP, LHCP).",
          "enum": [
            "RHCP",
            "LHCP",
            "linearVertical",
            "linearHorizontal"
          ],
          "x-ms-enum": {
            "name": "polarization",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "authorizations": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AuthorizedGroundstation"
          },
          "x-ms-identifiers": []
        }
      },
      "description": "List of authorized spacecraft links per ground station and the expiration date of the authorization."
    },
    "Spacecraft": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/SpacecraftsProperties"
            }
          ]
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Customer creates a spacecraft resource to schedule a contact."
    },
    "ResourceReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "x-ms-azure-resource": true,
      "description": "Resource Reference."
    },
    "OperationListResult": {
      "type": "object",
      "description": "Result of the request to list Orbital operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Orbital operations supported by the Orbital resource provider."
        }
      }
    },
    "Operation": {
      "description": "Orbital REST API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "isDataAction": {
          "type": "boolean",
          "default": false,
          "description": "Indicates whether the operation applies to data-plane."
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft Orbital.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed etc.",
              "type": "string"
            },
            "operation": {
              "description": "Type of operation: get, read, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Description of the operation.",
              "type": "string"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The origin of operations."
        }
      }
    },
    "GroundStationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroundStation"
          },
          "description": "A list of ground station resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListGroundStations API service call."
    },
    "GroundStation": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/GroundStationsProperties"
            }
          ],
          "description": "Properties of the Ground Station."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Ground Station contains one or more antennas."
    },
    "EndPoint": {
      "type": "object",
      "required": [
        "ipAddress",
        "endPointName",
        "port",
        "protocol"
      ],
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP Address."
        },
        "endPointName": {
          "type": "string",
          "description": "Name of an end point."
        },
        "port": {
          "type": "string",
          "description": "TCP port to listen on to receive data."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol either UDP or TCP.",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "protocol",
            "modelAsString": true
          }
        }
      },
      "description": "Customer End point to store/retrieve data during a contact."
    },
    "ContactsProperties": {
      "type": "object",
      "required": [
        "reservationStartTime",
        "reservationEndTime",
        "groundStationName",
        "contactProfile"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "scheduled",
            "cancelled",
            "succeeded",
            "failed",
            "providerCancelled"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": false
          },
          "description": "Status of a contact."
        },
        "reservationStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Reservation start time of a contact (ISO 8601 UTC standard).",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "reservationEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Reservation end time of a contact (ISO 8601 UTC standard).",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "rxStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Receive start time of a contact (ISO 8601 UTC standard)."
        },
        "rxEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Receive end time of a contact (ISO 8601 UTC standard)."
        },
        "txStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Transmit start time of a contact (ISO 8601 UTC standard)."
        },
        "txEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Transmit end time of a contact (ISO 8601 UTC standard)."
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Any error message while scheduling a contact."
        },
        "maximumElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Maximum elevation of the antenna during the contact in decimal degrees."
        },
        "startAzimuthDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Azimuth of the antenna at the start of the contact in decimal degrees."
        },
        "endAzimuthDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Azimuth of the antenna at the end of the contact in decimal degrees."
        },
        "groundStationName": {
          "type": "string",
          "description": "Azure Ground Station name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "startElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Spacecraft elevation above the horizon at contact start."
        },
        "endElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Spacecraft elevation above the horizon at contact end."
        },
        "antennaConfiguration": {
          "type": "object",
          "readOnly": true,
          "description": "The configuration associated with the allocated antenna.",
          "properties": {
            "destinationIp": {
              "type": "string",
              "description": "The destination IP a packet can be sent to. This would for example be the TCP endpoint you would send data to."
            },
            "sourceIps": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "The source IP a packet can have when being sent. You need to make sure you accept data from all these IPs in your application."
              }
            }
          }
        },
        "contactProfile": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "The reference to the contact profile resource."
        }
      },
      "description": "Properties of the Contact Resource."
    },
    "ContactProfilesProperties": {
      "type": "object",
      "required": [
        "links",
        "networkConfiguration"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "minimumViableContactDuration": {
          "type": "string",
          "description": "Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station."
        },
        "minimumElevationDegrees": {
          "type": "number",
          "description": "Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station."
        },
        "autoTrackingConfiguration": {
          "type": "string",
          "enum": [
            "disabled",
            "xBand",
            "sBand"
          ],
          "x-ms-enum": {
            "name": "AutoTrackingConfiguration",
            "modelAsString": false
          },
          "description": "Auto-tracking configuration."
        },
        "eventHubUri": {
          "type": "string",
          "description": "ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub."
        },
        "networkConfiguration": {
          "type": "object",
          "required": [
            "subnetId"
          ],
          "description": "Network configuration of customer virtual network.",
          "properties": {
            "subnetId": {
              "type": "string",
              "description": "ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it."
            }
          }
        },
        "links": {
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/ContactProfileLink"
          },
          "description": "Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints."
        }
      },
      "description": "List of Contact Profile Resource Properties."
    },
    "ContactProfileListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactProfile"
          },
          "description": "A list of contact profile resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListContactProfiles API service call."
    },
    "ContactProfileLinkChannel": {
      "type": "object",
      "required": [
        "name",
        "centerFrequencyMHz",
        "bandwidthMHz",
        "endPoint"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Channel name."
        },
        "centerFrequencyMHz": {
          "type": "number",
          "description": "Center Frequency in MHz."
        },
        "bandwidthMHz": {
          "type": "number",
          "description": "Bandwidth in MHz."
        },
        "endPoint": {
          "$ref": "#/definitions/EndPoint"
        },
        "modulationConfiguration": {
          "type": "string",
          "description": "Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream."
        },
        "demodulationConfiguration": {
          "type": "string",
          "description": "Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream."
        },
        "encodingConfiguration": {
          "type": "string",
          "description": ""
        },
        "decodingConfiguration": {
          "type": "string",
          "description": ""
        }
      }
    },
    "ContactProfileLink": {
      "type": "object",
      "required": [
        "name",
        "polarization",
        "direction",
        "channels"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Link name."
        },
        "polarization": {
          "type": "string",
          "description": "Polarization. e.g. (RHCP, LHCP).",
          "enum": [
            "RHCP",
            "LHCP",
            "linearVertical",
            "linearHorizontal"
          ]
        },
        "direction": {
          "type": "string",
          "description": "Direction (uplink or downlink).",
          "enum": [
            "uplink",
            "downlink"
          ]
        },
        "gainOverTemperature": {
          "type": "number",
          "description": "Gain To Noise Temperature in db/K. It is the required G/T by the customer. Not used yet."
        },
        "eirpdBW": {
          "type": "number",
          "description": "Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet."
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactProfileLinkChannel"
          }
        }
      }
    },
    "ContactProfile": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/ContactProfilesProperties"
            }
          ],
          "description": "Properties of the contact profile resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Customer creates a Contact Profile Resource, which will contain all of the configurations required for scheduling a contact."
    },
    "ContactParameters": {
      "type": "object",
      "description": "Parameters that define the contact resource.",
      "required": [
        "contactProfile",
        "groundStationName",
        "startTime",
        "endTime"
      ],
      "properties": {
        "contactProfile": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "The reference to the contact profile resource."
        },
        "groundStationName": {
          "type": "string",
          "description": "Name of Azure Ground Station."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of a contact."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of a contact."
        }
      }
    },
    "ContactListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "description": "A list of contact resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListContacts API service call."
    },
    "ContactInstanceProperties": {
      "type": "object",
      "properties": {
        "maximumElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Maximum elevation of the antenna during the contact in decimal degrees."
        },
        "txStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Time at which antenna transmit will be enabled."
        },
        "txEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Time at which antenna transmit will be disabled."
        },
        "rxStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Earliest time to receive a signal."
        },
        "rxEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Time to lost receiving a signal."
        },
        "startAzimuthDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Azimuth of the antenna at the start of the contact in decimal degrees."
        },
        "endAzimuthDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Azimuth of the antenna at the end of the contact in decimal degrees."
        },
        "startElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Spacecraft elevation above the horizon at contact start."
        },
        "endElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Spacecraft elevation above the horizon at contact end."
        }
      },
      "description": "Contact Instance Properties."
    },
    "Contact": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContactsProperties"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Customer creates a contact resource for a spacecraft resource."
    },
    "CloudErrorBody": {
      "type": "object",
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the service."
    },
    "CloudError": {
      "type": "object",
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "description": "An error response from the service."
    },
    "AvailableContactsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableContacts"
          },
          "description": "A list of available contacts."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListAvailableContacts API service call."
    },
    "AvailableContacts": {
      "type": "object",
      "properties": {
        "spacecraft": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "The reference to the spacecraft resource."
        },
        "groundStationName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of Azure Ground Station."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/ContactInstanceProperties"
            }
          ],
          "description": "Properties of Contact resource."
        }
      },
      "description": "Customer retrieves list of Available Contacts for a spacecraft resource. Later, one of the available contact can be selected to create a contact."
    },
    "GroundStationsProperties": {
      "type": "object",
      "required": [
        "capabilities"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "city": {
          "type": "string",
          "description": "City of ground station."
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "description": "Ground station capabilities."
        },
        "providerName": {
          "type": "string",
          "description": "Ground station provider name."
        },
        "longitudeDegrees": {
          "type": "number",
          "description": "Longitude of the ground station in decimal degrees."
        },
        "latitudeDegrees": {
          "type": "number",
          "description": "Latitude of the ground station in decimal degrees."
        },
        "altitudeMeters": {
          "type": "number",
          "description": "Altitude of the ground station."
        },
        "releaseMode": {
          "type": "string",
          "enum": [
            "Preview",
            "GA"
          ],
          "x-ms-enum": {
            "name": "releaseMode",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "Release Status of a ground station."
        },
        "globalCommunicationsInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/GlobalCommunicationsInfo"
            }
          ],
          "description": "Describes the partner's global communications configuration for the site."
        }
      },
      "description": "List of Ground Station Resource Properties."
    },
    "AvailableGroundStationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableGroundStation"
          },
          "description": "A list of ground station resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the AvailableGroundStations API service call."
    },
    "AvailableGroundStation": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Id of groundStation."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the ground station."
        },
        "location": {
          "type": "string",
          "description": "Azure region."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/AvailableGroundStationProperties"
            }
          ],
          "description": "The properties bag for this resource."
        }
      },
      "description": "GroundStations available to schedule Contacts."
    },
    "AvailableGroundStationProperties": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "description": "City of ground station."
        },
        "providerName": {
          "type": "string",
          "description": "Ground station provider name."
        },
        "longitudeDegrees": {
          "type": "number",
          "description": "Longitude of the ground station in decimal degrees."
        },
        "latitudeDegrees": {
          "type": "number",
          "description": "Latitude of the ground station in decimal degrees."
        },
        "altitudeMeters": {
          "type": "number",
          "description": "Altitude of the ground station."
        },
        "releaseMode": {
          "type": "string",
          "enum": [
            "Preview",
            "GA"
          ],
          "x-ms-enum": {
            "name": "releaseMode",
            "modelAsString": true
          },
          "description": "Release Status of a ground station."
        }
      },
      "description": "Properties object for Available groundstation."
    },
    "Capability": {
      "type": "string",
      "description": "Capability of the Ground Station.",
      "enum": [
        "EarthObservation",
        "Communication"
      ],
      "x-ms-enum": {
        "name": "Capability",
        "modelAsString": true
      }
    },
    "EdgeSitesProperties": {
      "type": "object",
      "required": [
        "globalCommunicationsInfo"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "globalCommunicationsInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/GlobalCommunicationsInfo"
            }
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Describes the partner configuration for the site."
        }
      },
      "description": "Properties object for an edge site."
    },
    "PartnerRouter": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The unique name of the partnerRouter."
        }
      },
      "description": "One of the partner routers within a global communications site."
    },
    "LocationData": {
      "type": "object",
      "required": [
        "city",
        "district",
        "country"
      ],
      "properties": {
        "city": {
          "type": "string",
          "description": "The city of the location (e.g., Miami)."
        },
        "district": {
          "type": "string",
          "description": "For example, the state (e.g., Florida), province (e.g., Ontario), or region (e.g., Tuscany) of the location."
        },
        "country": {
          "type": "string",
          "description": "The nation (e.g., United States of America) of the location."
        },
        "closestAzureRegion": {
          "type": "string",
          "description": "The name of the closest Azure region, (e.g., westus2)."
        },
        "extra": {
          "type": "string",
          "x-nullable": true,
          "description": "Any extra information needed to uniquely identify the location (e.g., zip code)."
        }
      },
      "description": "Describes a location outside of Azure."
    },
    "GlobalCommunicationsSiteType": {
      "type": "string",
      "enum": [
        "Edge",
        "GroundStation"
      ],
      "x-ms-enum": {
        "name": "GlobalCommunicationsSiteType",
        "modelAsString": true
      },
      "description": "The type of the global communications site. groundStations can only use sites of type GroundStation, and edgeSites can only use sites of type Edge."
    },
    "GlobalCommunicationsSitesProperties": {
      "type": "object",
      "properties": {
        "locationData": {
          "allOf": [
            {
              "$ref": "#/definitions/LocationData"
            }
          ],
          "description": "Describes a location outside of Azure."
        },
        "globalCommunicationsSiteType": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/GlobalCommunicationsSiteType"
            }
          ],
          "description": "The type of the global communications site. groundStations can only use sites of type GroundStation, and edgeSites can only use sites of type Edge."
        }
      },
      "description": "Properties object for a global communications site."
    },
    "GlobalCommunicationsInfo": {
      "type": "object",
      "properties": {
        "globalCommunicationsSite": {
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "required": [
            "id"
          ],
          "description": "A reference to a global communications site.",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the global communications site."
            }
          }
        },
        "partnerRouters": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PartnerRouter"
          },
          "x-ms-identifiers": [],
          "description": "The different customer routers of this site."
        }
      },
      "description": "Properties object for a global communications site."
    },
    "GlobalCommunicationsSite": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/GlobalCommunicationsSitesProperties"
            }
          ],
          "description": "The properties bag for this resource."
        },
        "etag": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/Etag"
            }
          ],
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "A site where the Orbital network is connected to a partner network."
    },
    "GlobalCommunicationsSiteListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalCommunicationsSite"
          },
          "description": "A list of global communications sites."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists Global Communications Sites."
    },
    "EdgeSite": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/EdgeSitesProperties"
            }
          ],
          "description": "The properties bag for this resource."
        },
        "etag": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/Etag"
            }
          ],
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "A customer's reference to a global communications site site."
    },
    "EdgeSiteListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdgeSite"
          },
          "description": "A list of edge site resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists Edge Sites."
    },
    "L2ConnectionsProperties": {
      "type": "object",
      "required": [
        "edgeSite",
        "edgeSitePartnerRouter",
        "groundStation",
        "groundStationPartnerRouter",
        "vlanInfo"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "circuitId": {
          "type": "string",
          "readOnly": true,
          "description": "Globally-unique identifier for this connection that is to be used as a circuit ID."
        },
        "edgeSite": {
          "type": "object",
          "required": [
            "id"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "The edge site's resource ID."
            }
          },
          "description": "A reference to an edge site."
        },
        "edgeSitePartnerRouter": {
          "type": "object",
          "required": [
            "name"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the partnerRouter to establish the connection with at the edge site."
            }
          },
          "description": "The name of the partnerRouter to establish a connection to within the edge site."
        },
        "groundStation": {
          "type": "object",
          "required": [
            "id"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "The groundStation's resource ID."
            }
          },
          "description": "A reference to an Microsoft.Orbital/groundStations resource to route traffic for."
        },
        "groundStationPartnerRouter": {
          "type": "object",
          "required": [
            "name"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the partnerRouter to establish the connection with at the groundStation."
            }
          },
          "description": "The name of the partnerRouter to establish a connection to within the groundStation."
        },
        "vlanInfo": {
          "type": "object",
          "required": [
            "vlanId"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "vlanId": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 4094,
              "description": "The vlan ID of the traffic that this connection should handle."
            }
          },
          "description": "Description of the vlan traffic that this connection will handle."
        }
      },
      "description": "Properties object for an L2 Connection."
    },
    "L2Connection": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/L2ConnectionsProperties"
            }
          ],
          "description": "The properties bag for this resource."
        },
        "etag": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/Etag"
            }
          ],
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Connects an edge site to an orbital gateway and describes what layer 2 traffic to forward between them."
    },
    "L2ConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/L2Connection"
          },
          "description": "A list of L2 Connection resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists L2 Connections."
    },
    "ResourceIdListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The Azure Resource ID."
              }
            }
          },
          "description": "A list of Azure Resource IDs."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists the resource IDs of resources associated with another resource."
    },
    "Etag": {
      "readOnly": true,
      "type": "string",
      "description": "A unique read-only string that changes whenever the resource is updated."
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Creating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "description": "The current state of the resource's creation, deletion, or modification.",
      "readOnly": true
    },
    "AuthorizedGroundstation": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "groundStation": {
          "type": "string",
          "description": "Groundstation name."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of authorization expiration."
        }
      },
      "description": "Authorized groundstation."
    },
    "OperationResult": {
      "description": "Operation Result Entity.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "ID of the resource.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Name of the resource.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "startTime": {
          "description": "The operation start time (ISO 8601 UTC standard).",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "The operation end time (ISO 8601 UTC standard).",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 100,
          "description": "Percentage completed.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/OperationResultProperties"
        },
        "error": {
          "$ref": "#/definitions/OperationResultErrorProperties"
        }
      }
    },
    "Status": {
      "readOnly": true,
      "description": "The status of operation.",
      "type": "string",
      "enum": [
        "Succeeded",
        "Canceled",
        "Failed",
        "Running"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      }
    },
    "OperationResultProperties": {
      "type": "object",
      "properties": {},
      "description": "Operation result properties."
    },
    "OperationResultErrorProperties": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        }
      },
      "description": "Operation result error properties."
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "2020-09-01-preview",
        "2021-04-04-preview",
        "2022-03-01"
      ],
      "default": "2022-03-01",
      "description": "Version of the API to be used with the client request."
    },
    "contactNameParameter": {
      "name": "contactName",
      "in": "path",
      "description": "Contact Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "contactProfileNameParameter": {
      "name": "contactProfileName",
      "in": "path",
      "description": "Contact Profile Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "groundStationNameParameter": {
      "name": "groundStationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Ground Station name.",
      "x-ms-parameter-location": "method"
    },
    "spacecraftNameParameter": {
      "name": "spacecraftName",
      "in": "path",
      "description": "Spacecraft ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "capabilityParameter": {
      "name": "capability",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "EarthObservation",
        "Communication"
      ],
      "x-ms-enum": {
        "name": "capabilityParameter",
        "modelAsString": true
      },
      "default": "EarthObservation",
      "description": "Ground Station Capability.",
      "x-ms-parameter-location": "method"
    },
    "edgeSiteNameParameter": {
      "name": "edgeSiteName",
      "in": "path",
      "description": "Edge site name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "l2ConnectionNameParameter": {
      "name": "l2ConnectionName",
      "in": "path",
      "description": "L2 Connection name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "globalCommunicationsSiteNameParameter": {
      "name": "globalCommunicationsSiteName",
      "in": "path",
      "description": "Global communications Site name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "skipTokenParameter": {
      "name": "$skiptoken",
      "description": "An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "string"
    }
  }
}